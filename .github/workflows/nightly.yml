name: Nightly
on:
  schedule:
    - cron: "0 0 * * *"
  workflow_dispatch:

jobs:
  ui:
    runs-on: ubuntu-latest
    container: node:22-bullseye
    defaults: { run: { working-directory: ui } }
    steps:
      - uses: actions/checkout@v5
      - uses: actions/cache@v4
        with:
          path: ~/.npm
          key: ${{ runner.os }}-ui-npm-${{ hashFiles('ui/package-lock.json') }}
          restore-keys: ${{ runner.os }}-ui-npm-
      - uses: actions/cache@v4
        with:
          path: ui/node_modules/.vite
          key: ${{ runner.os }}-vite-${{ hashFiles('ui/package-lock.json') }}
          restore-keys: ${{ runner.os }}-vite-
      - run: npm ci
      - run: npm run lint --if-present
      - run: npm run typecheck --if-present
      - run: npm run build --if-present
      - run: npm run test:ci --if-present
        env: { CI: "true" }
      - name: Verify coverage files
        run: |
          ls -l ui/coverage/
          if [ ! -f ui/coverage/lcov.info ]; then
            echo "ui/coverage/lcov.info missing"
            exit 1
          fi
          head -n 50 ui/coverage/lcov.info
          unexpected=$(grep '^SF:' ui/coverage/lcov.info | grep -v '^SF:ui/src/' || true)
          if [ -n "$unexpected" ]; then
            echo "lcov.info contains unexpected paths:"
            echo "$unexpected"
            exit 1
          fi
      # - name: Upload Codecov (UI)
      #   uses: codecov/codecov-action@v4
      #   with:
      #     files: ui/coverage/lcov.info
      #     flags: ui
      #     fail_ci_if_error: true
      #     verbose: true
  server:
    runs-on: ubuntu-latest
    container: node:22-bullseye
    defaults: { run: { working-directory: server } }
    steps:
      - uses: actions/checkout@v5
      - uses: actions/cache@v4
        with:
          path: ~/.npm
          key: ${{ runner.os }}-server-npm-${{ hashFiles('server/package-lock.json') }}
          restore-keys: ${{ runner.os }}-server-npm-
      - run: npm ci
      - run: npm run lint --if-present
      - run: npm run build --if-present
      - run: npm run test:ci --if-present
        env: { CI: "true" }
      # - name: Upload coverage to Codecov
      #   uses: codecov/codecov-action@v4
      #   with:
      #     files: server/coverage/lcov.info
      #     flags: server
      #     fail_ci_if_error: true
  python:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v5
      - uses: actions/setup-python@v5
        with:
          python-version: '3.12'
      - uses: actions/cache@v4
        with:
          path: ~/.cache/pip
          key: ${{ runner.os }}-pip-${{ hashFiles('requirements.txt') }}
          restore-keys: ${{ runner.os }}-pip-
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt pytest pytest-cov pytest-asyncio
      - name: Run tests
        run: |
          pytest --maxfail=1 -q --durations=10 --cov=src --cov-report=xml
      # - name: Upload coverage to Codecov
      #   uses: codecov/codecov-action@v4
      #   with:
      #     files: coverage.xml
      #     flags: python
      #     fail_ci_if_error: true
