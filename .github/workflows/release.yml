name: Release

on:
  push:
    tags:
      - 'v*'

permissions:
  contents: write
  packages: write
  id-token: write

jobs:
  build:
    runs-on: ubuntu-latest
    outputs:
      hashes: ${{ steps.hash.outputs.hashes }}
      notes: ${{ steps.changelog.outputs.notes }}
    steps:
      - uses: actions/checkout@v4

      - uses: actions/setup-node@v4
        with:
          node-version: 22
          cache: npm
          cache-dependency-path: ui/package-lock.json

      - name: Install and build UI
        working-directory: ui
        run: npm ci && npm run build

      - name: Package UI dist
        run: tar -czf ui-dist-${{ github.ref_name }}.tar.gz -C ui dist

      - name: Generate SBOM
        uses: anchore/syft-action@v3
        with:
          output: sbom-${{ github.ref_name }}.spdx.json
          format: spdx-json

      - name: Log in to ghcr.io
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Build and push gateway image
        uses: docker/build-push-action@v5
        with:
          context: src/gateway
          push: true
          tags: ghcr.io/${{ github.repository }}/gateway:${{ github.ref_name }}

      - name: Build and push orchestrator image
        uses: docker/build-push-action@v5
        with:
          context: src/orchestrator
          push: true
          tags: ghcr.io/${{ github.repository }}/orchestrator:${{ github.ref_name }}

      - name: Build and push ui image
        uses: docker/build-push-action@v5
        with:
          context: ui
          push: true
          tags: ghcr.io/${{ github.repository }}/ui:${{ github.ref_name }}

      - name: Generate changelog
        id: changelog
        run: |
          echo "notes<<EOF" >> $GITHUB_OUTPUT
          cat RELEASE_NOTES.md >> $GITHUB_OUTPUT
          echo "EOF" >> $GITHUB_OUTPUT

      - name: Compute artifact hashes
        id: hash
        run: echo "hashes=$(sha256sum ui-dist-${{ github.ref_name }}.tar.gz sbom-${{ github.ref_name }}.spdx.json | base64 -w0)" >> $GITHUB_OUTPUT

      - name: Upload UI dist
        uses: actions/upload-artifact@v4
        with:
          name: ui-dist-${{ github.ref_name }}.tar.gz
          path: ui-dist-${{ github.ref_name }}.tar.gz

      - name: Upload SBOM
        uses: actions/upload-artifact@v4
        with:
          name: sbom-${{ github.ref_name }}.spdx.json
          path: sbom-${{ github.ref_name }}.spdx.json

  provenance:
    needs: build
    permissions:
      actions: read
      id-token: write
      contents: write
    uses: slsa-framework/slsa-github-generator/.github/workflows/generator_generic_slsa3.yml@v2.1.0
    with:
      base64-subjects: "${{ needs.build.outputs.hashes }}"
      provenance-name: provenance-${{ github.ref_name }}.intoto.jsonl

  release:
    needs: [build, provenance]
    runs-on: ubuntu-latest
    steps:
      - name: Download UI dist
        uses: actions/download-artifact@v5
        with:
          name: ui-dist-${{ github.ref_name }}.tar.gz
          path: .

      - name: Download SBOM
        uses: actions/download-artifact@v5
        with:
          name: sbom-${{ github.ref_name }}.spdx.json
          path: .

      - name: Download provenance
        uses: actions/download-artifact@v5
        with:
          name: provenance-${{ github.ref_name }}.intoto.jsonl
          path: .

      - name: Create GitHub release
        uses: softprops/action-gh-release@v2
        with:
          tag_name: ${{ github.ref_name }}
          name: ${{ github.ref_name }}
          body: ${{ needs.build.outputs.notes }}
          files: |
            ui-dist-${{ github.ref_name }}.tar.gz
            sbom-${{ github.ref_name }}.spdx.json
            provenance-${{ github.ref_name }}.intoto.jsonl

