name: CI

on:
  push:
    branches: [ main ]
  pull_request:

jobs:
  ui:
    name: UI (Node 22.x)
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ui
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Use Node 22.x
        uses: actions/setup-node@v4
        with:
          node-version: '22.x'
          cache: 'npm'
          cache-dependency-path: 'ui/package-lock.json'

      - name: Install
        run: npm ci

      - name: Lint
        run: npm run lint

      - name: Typecheck
        run: npm run typecheck || true

      - name: Restore Vite cache
        id: vite-cache
        uses: actions/cache/restore@v4
        with:
          path: ui/node_modules/.vite
          key: ${{ runner.os }}-vite-${{ hashFiles('ui/package-lock.json') }}

      - name: Build
        run: npm run build

      - name: Save Vite cache
        if: success() && steps.vite-cache.outputs.cache-hit != 'true'
        uses: actions/cache/save@v4
        with:
          path: ui/node_modules/.vite
          key: ${{ runner.os }}-vite-${{ hashFiles('ui/package-lock.json') }}

        - name: Test with coverage
          env:
            CI: 'true'
          run: npm run test:coverage

        - name: Upload coverage to Codecov
          uses: codecov/codecov-action@v5
          with:
            token: ${{ secrets.CODECOV_TOKEN }}
            flags: ui
            directory: coverage

    server:
      name: Server (Node 22.x)
      runs-on: ubuntu-latest
      if: hashFiles('server/package.json') != ''
      defaults:
        run:
          working-directory: server
      steps:
        - name: Checkout
          uses: actions/checkout@v4

        - name: Use Node 22.x
          uses: actions/setup-node@v4
          with:
            node-version: '22.x'
            cache: 'npm'
            cache-dependency-path: 'server/package-lock.json'

        - name: Install
          run: npm ci

        - name: Test with coverage
          env:
            CI: 'true'
          run: npm run test:coverage

        - name: Upload coverage to Codecov
          uses: codecov/codecov-action@v5
          with:
            token: ${{ secrets.CODECOV_TOKEN }}
            flags: server
            directory: coverage

    python:
      name: Python (3.11)
      runs-on: ubuntu-latest
      steps:
        - name: Checkout
          uses: actions/checkout@v4

        - name: Set up Python
          uses: actions/setup-python@v5
          with:
            python-version: '3.11'

        - name: Install dependencies
          run: |
            python -m pip install --upgrade pip
            pip install -r requirements.lock -r src/gateway/requirements.lock -r src/orchestrator/requirements.lock pytest pytest-cov

        - name: Test with coverage
          run: pytest --cov=src --cov-report=xml

        - name: Upload coverage to Codecov
          uses: codecov/codecov-action@v5
          with:
            token: ${{ secrets.CODECOV_TOKEN }}
            files: coverage.xml
            flags: python
