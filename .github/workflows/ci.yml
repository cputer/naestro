name: CI
on:
  push: { branches: [main] }
  pull_request: { branches: [main] }

jobs:
  ui:
    runs-on: ubuntu-latest
    container: node:22-bullseye
    steps:
      - uses: actions/checkout@v5
      - name: Sanitize proxy env (global)
        shell: bash
        run: |
          unset http_proxy https_proxy HTTP_PROXY HTTPS_PROXY npm_config_proxy npm_config_http_proxy npm_config_https_proxy
          npm config delete proxy || true
          npm config delete http-proxy || true
          npm config delete https-proxy || true
          echo "Global proxy config removed"
      - uses: actions/cache@v4
        with:
          path: ~/.npm
          key: ${{ runner.os }}-ui-npm-${{ hashFiles('ui/package-lock.json') }}
          restore-keys: ${{ runner.os }}-ui-npm-
      - uses: actions/cache@v4
        with:
          path: ui/node_modules/.vite
          key: ${{ runner.os }}-vite-${{ hashFiles('ui/package-lock.json') }}
          restore-keys: ${{ runner.os }}-vite-
      - name: Sanitize proxy env
        run: |
          unset http_proxy https_proxy HTTP_PROXY HTTPS_PROXY npm_config_proxy npm_config_http_proxy npm_config_https_proxy
          echo "Proxy env sanitized"
      - run: npm ci
        working-directory: ui
      - run: npm run lint --if-present
        working-directory: ui
      - run: npm run typecheck --if-present
        working-directory: ui
      - run: npm run build --if-present
        working-directory: ui
      - run: npm run test:ci
        working-directory: ui
        env: { CI: "true" }
      - name: Verify coverage files
        run: test -f ui/coverage/lcov.info
      - name: Upload Codecov (UI)
        if: success()
        uses: codecov/codecov-action@v4
        with:
          files: ui/coverage/lcov.info
          flags: ui
          fail_ci_if_error: true
          verbose: true
  server:
    runs-on: ubuntu-latest
    container: node:22-bullseye
    defaults: { run: { working-directory: server } }
    steps:
      - uses: actions/checkout@v5
      - name: Sanitize proxy env (global)
        shell: bash
        run: |
          unset http_proxy https_proxy HTTP_PROXY HTTPS_PROXY npm_config_proxy npm_config_http_proxy npm_config_https_proxy
          npm config delete proxy || true
          npm config delete http-proxy || true
          npm config delete https-proxy || true
          echo "Global proxy config removed"
      - uses: actions/cache@v4
        with:
          path: ~/.npm
          key: ${{ runner.os }}-server-npm-${{ hashFiles('server/package-lock.json') }}
          restore-keys: ${{ runner.os }}-server-npm-
      - name: Sanitize proxy env
        run: |
          unset http_proxy https_proxy HTTP_PROXY HTTPS_PROXY npm_config_proxy npm_config_http_proxy npm_config_https_proxy
          echo "Proxy env sanitized"
      - run: npm ci
      - run: npm run lint --if-present
      - run: npm run build --if-present
      - run: npm run test:ci --if-present
        env: { CI: "true" }
      # - name: Upload coverage to Codecov
      #   uses: codecov/codecov-action@v4
      #   with:
      #     files: server/coverage/lcov.info
      #     flags: server
      #     fail_ci_if_error: true
  python:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v5
      - name: Sanitize proxy env (global)
        shell: bash
        run: |
          unset http_proxy https_proxy HTTP_PROXY HTTPS_PROXY npm_config_proxy npm_config_http_proxy npm_config_https_proxy
          npm config delete proxy || true
          npm config delete http-proxy || true
          npm config delete https-proxy || true
          echo "Global proxy config removed"
      - uses: actions/setup-python@v5
        with:
          python-version: '3.12'
      - uses: actions/cache@v4
        with:
          path: ~/.cache/pip
          key: ${{ runner.os }}-pip-${{ hashFiles('requirements.txt', 'requirements-dev.txt') }}
          restore-keys: ${{ runner.os }}-pip-
      - name: Sanitize proxy env
        run: |
          unset http_proxy https_proxy HTTP_PROXY HTTPS_PROXY npm_config_proxy npm_config_http_proxy npm_config_https_proxy
          echo "Proxy env sanitized"
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt -r requirements-dev.txt
      - name: Run tests
        run: |
          pytest -m "not slow" --maxfail=1 -q --durations=10 --cov=src --cov-report=xml
      - name: Verify coverage files
        run: test -f coverage.xml
      - name: Upload Codecov (Python)
        if: success()
        uses: codecov/codecov-action@v4
        with:
          files: coverage.xml
          flags: python
          fail_ci_if_error: true
          verbose: true
